# Webserv Configuration File â„¢

server
	# 1/ Choose the port and host of each server
	# 2/ Setup the server_name(s) or not (localhost by default)
	listen		2001

	server_name	school

	# 3/ Setup default error pages
	error_page	400 error/400.html
	error_page	403 error/403.html
	error_page	404 error/404.html
	error_page	405 error/405.html
	error_page	411 error/411.html
	error_page	413 error/413.html
	error_page	500 error/500.html
	error_page	501 error/501.html
	error_page	505 error/505.html

	# 4/ Limit client body size (1MB by default)
	client_max_body_size 100M

	# 5/ Setup routes with one or multiple of the following rules/configuration
	
	# location	/methods
	# 	# 5a/ Define a list of accepted HTTP methods for the route (false by default expect GET which is allowed)
	# 	allow 	POST
	# 	allow 	DELETE

	location 	/
		# 5c/ Define a directory or a file from where the file should be searched
		allow POST
		root	/webdata
		redirect /webdata/index.html

	location	/42
		# 5b/ Define a HTTP redirection (check expected 30X status codes)
		redirect https://www.42network.org/

	location	/www/upload
		# 5d/ Turn on or off directory listing (off by default)
		allow		DELETE
		allow		POST
		upload		/webdata/upload
		autoindex 	on

	location	/CGIScript
		# 5f/ Execute CGI based on certain file extension, make it work with POST and GET methods
		allow	POST
		root	/CGIScript
		path	/usr/bin/python3
		ext		.py

		# For demoing this, we could setup a simple form asking for
		# the name of user before sending back a `Hello, [USER]!` ?
	location	/print
		allow 	POST
		root	/CGIScript
		redirect	/webdata/cgiPerlPage.html
		path 	/usr/bin/perl
		ext		.pl

	location	/sendfeetpics
		# 5g/ Make the route able to accept uploaded files and configure where they should be saved
		allow	POST
		root	/webdata/upload
		upload	/webdata/upload

server
	listen		3000
	server_name	campus

	error_page	400 error/400.html
	error_page	500 error/500.html

server
	listen		4000
	server_name	school

	# 3/ Setup default error pages
	error_page	400 error/400.html
	error_page	403 error/403.html
	error_page	404 error/404.html
	error_page	405 error/405.html
	error_page	411 error/411.html
	error_page	413 error/413.html
	error_page	500 error/500.html
	error_page	501 error/501.html
	error_page	505 error/505.html

	# 4/ Limit client body size (1MB by default)
	client_max_body_size 42M

	# 5/ Setup routes with one or multiple of the following rules/configuration
	
	location	/methods
		# 5a/ Define a list of accepted HTTP methods for the route (false by default expect GET which is allowed)
		allow 	POST
		allow 	DELETE

	location 	/
		root	/webdata
		redirect /webdata/test.html

	location	/42
		# 5b/ Define a HTTP redirection (check expected 30X status codes)
		redirect https://www.42network.org/

	location	/pictures
		# 5c/ Define a directory or a file from where the file should be searched
		root	/www/media

	location	/www/upload
		# 5d/ Turn on or off directory listing (off by default)
		autoindex on

	location	/index
		# 5e/ Set a default file to answer if the request is a directory
		index	/index.html


	location	/CGIScript
		# 5f/ Execute CGI based on certain file extension, make it work with POST and GET methods
		allow	POST
		root	/CGIScript
		path	/usr/bin/python3
		ext		.py

		# For demoing this, we could setup a simple form asking for
		# the name of user before sending back a `Hello, [USER]!` ?

	location	/sendfeetpics
		# 5g/ Make the route able to accept uploaded files and configure where they should be saved
		allow	POST
		upload	/www/upload
